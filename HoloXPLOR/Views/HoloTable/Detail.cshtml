@using HoloXPLOR.Data.XML.Inventory

@model Player

@{
    ViewBag.Title = "Detail";
    Dictionary<Guid, Item> itemMap = Model.Items.ToDictionary(k => k.ID, v => v);
}

@helper RenderHardpoint(Port hardpoint, Dictionary<Guid, Item> itemMap)
{
    var item = itemMap.GetValue(hardpoint.ItemID, new Item {
        Class = "Empty",
        Ports = new PortCollection(),
        Pipes = new PipeCollection(),
        Inventory = new Inventory(),
    });
    var displayName = String.Empty;
    
    <li>
        @hardpoint.PortName - 
        
        @{
            if (item != null)
            {
                var weapon = HoloXPLOR.Data.Scripts.Items.GetValue(item.Class, null);
            
                if (weapon != null)
                {
                    displayName = weapon.Params.Items.Where(p => p.Name == "display_name").Select(p => p.Value).FirstOrDefault();
                }

                if (String.IsNullOrWhiteSpace(displayName))
                {
                    displayName = item.Class;
                }
            }

            if (String.IsNullOrWhiteSpace(displayName))
            {
                displayName = "Empty";
            }
        }
            
        @displayName

        @if (item != null && item.Ports.Count > 0)
        {
            <ul>
                @foreach (var port in item.Ports.Items)
                {
                    @RenderHardpoint(port, itemMap);
                }
            </ul>
        }
    </li>
}

<h2>Detail</h2>

<dl>
    @foreach (var ship in Model.Ships)
    {
        <dt>@ship.Class</dt>
        <dd>
            <ul>
                @foreach (var port in ship.Ports.Items.OrderBy(i => i.PortName))
                {
                    @RenderHardpoint(port, itemMap);
                }
            </ul>
        </dd>
    }
</dl>