@using Inventory = HoloXPLOR.Data.XML.Inventory
@using Items = HoloXPLOR.Data.XML.Spaceships
@using Vehicles = HoloXPLOR.Data.XML.Vehicles.Implementations
@using HoloXPLOR.Models.HoloTable

@model DetailModel

@helper RenderItemCategory(String category, Dictionary<Guid, InventoryItem> items)
{
    var list = (from key in items.Keys
                let item = items[key]
                where Model.View_ItemMap.GetValue(key, null) != null
                let ship = (item.Inventory_Ship ?? new Inventory.Ship { })
                let game_ship = (item.GameData_Ship ?? new Vehicles.Vehicle { })
                group item by new { DisplayName = item.Item_DisplayName, ItemSize = item.ItemSize, ShipName = game_ship.DisplayName, ShipID = ship.ID } into groupedItems
                orderby groupedItems.Key.ShipName, groupedItems.Key.ItemSize, groupedItems.Key.DisplayName
                group groupedItems by groupedItems.Key.ShipID != Guid.Empty ? groupedItems.Key.ShipName : String.Format("Size {0}", groupedItems.Key.ItemSize) into groupedItems2
                select groupedItems2).ToArray();

    if (list.Length > 0)
    {
        <li>
            <h4 data-toggle="collapse" data-target="#pnl_@category.Replace(" ", "_")">@category (@list.Sum(s => s.Sum(i => i.Count())))</h4>
            <ul class="collapse list-unstyled" id="pnl_@category.Replace(" ", "_")">
                @foreach (var subCategory in list)
                {
                    <li class="row">
                        <label class="col-md-4">@subCategory.Key</label>
                        <ul class="list-unstyled col-md-8">
                            @foreach (var grouping in subCategory)
                            {
                                var isEquipped = !String.IsNullOrWhiteSpace(grouping.Key.ShipName);
                                var isEquipped_Self = isEquipped && (grouping.Key.ShipID == Model.ShipID);
                                var item = grouping.FirstOrDefault();

                                <li class="js-item @(isEquipped_Self ? "js-equipped" : "js-available")" @item.HTML_Attributes data-droppable>
                                    @(grouping.Count())x @item.Item_DisplayName.ToLocalized() (@item.ItemSize)
                                </li>
                            }
                        </ul>
                    </li>
                }
            </ul>
        </li>
    }
}

<h3>Inventory</h3>

<ul>
    <!-- Reminder: Handle Ammo Automatically For Now -->
    @*@RenderItemCategory("Ammo", Model.GameData_CategoryMap[Items.CategoryEnum.AmmoBox])*@
    @RenderItemCategory("Armor", Model.View_CategoryMap[Items.CategoryEnum.Armor])
    @RenderItemCategory("Cargo", Model.View_CategoryMap[Items.CategoryEnum.Storage])
    @RenderItemCategory("Missiles", Model.View_CategoryMap[Items.CategoryEnum.Missile])
    @RenderItemCategory("Power", Model.View_CategoryMap[Items.CategoryEnum.PowerPlant])
    @RenderItemCategory("Engines", Model.View_CategoryMap[Items.CategoryEnum.Engine])
    @RenderItemCategory("Thrusters", Model.View_CategoryMap[Items.CategoryEnum.Thruster])
    @RenderItemCategory("Shields", Model.View_CategoryMap[Items.CategoryEnum.Shield])
    @RenderItemCategory("Turrets", Model.View_CategoryMap[Items.CategoryEnum.Turret])
    @RenderItemCategory("Weapons", Model.View_CategoryMap[Items.CategoryEnum.Weapon])
</ul>