@using Inventory = HoloXPLOR.Data.XML.Inventory
@using Items = HoloXPLOR.Data.XML.Spaceships
@using Vehicles = HoloXPLOR.Data.XML.Vehicles.Implementations
@using HoloXPLOR.Models.HoloTable

@model DetailModel

@{
    ViewBag.Title = "Detail";
}

@helper RenderHardpoints(Inventory.Item parent)
{
    var items = Model.View_Loadout
            .Where(i => i.Inventory_EquippedItem == parent)
            .OrderBy(i => i.GameData_EquippedPort.Types.Select(t => t.Type).FirstOrDefault())
            .ThenByDescending(i => i.GameData_EquippedPort.MaxSize)
            .ThenByDescending(i => i.GameData_EquippedPort.MinSize)
            .ThenBy(i => i.GameData_EquippedPort.DisplayName.ToLocalized())
            .ToList();
             
    if (items.Count > 0)
    { 
        <ul>
            @foreach (var item in items)
            {
                // var hardpoint = Model.GameData_ItemMap[item.EquippedItem.ID].PortParams.Items.Where(p => p.Name == item.EquippedPort.PortName).FirstOrDefault();
                var hardpoint = item.GameData_EquippedPort;
                var displayName = hardpoint.DisplayName;
                if (String.IsNullOrWhiteSpace(displayName))
                {
                    displayName = hardpoint.Name;
                }

                <li data-id="@((item.Inventory_Item ?? new Inventory.Item { ID = Guid.Empty }).ID)"
                    data-class="@hardpoint.Name"
                    data-min-size="@hardpoint.MinSize"
                    data-max-size="@hardpoint.MaxSize"
                    data-types="@String.Join(" ", hardpoint.Types.Select(t => String.Format("{0}:{1}", t.Type, t.SubType)))">

                    @displayName.ToLocalized() (@hardpoint.MinSize - @hardpoint.MaxSize)

                    @if (item.GameData_Item != null)
                    {
                        displayName = item.GameData_Item.DisplayName.ToLocalized();
                        if (String.IsNullOrWhiteSpace(displayName))
                        {
                            displayName = item.GameData_Item.Name.ToLocalized();
                        }

                        @: @displayName (@item.GameData_Item.ParamMap["itemSize"])

                        @RenderHardpoints(item.Inventory_Item)
                    }
                    else
                    {
                        <br />
                        @: [ Empty ]
                    }
                </li>
            }
        </ul>
    }
}

<h2>@Model.GameData_ShipMap[Model.ShipID].DisplayName</h2>

<div class="col-sm-6">
    <h3>Hardpoints</h3>

    @RenderHardpoints(null)
</div>

<div class="col-sm-6">
    @{ Html.RenderPartial("_Items", Model); }
</div>